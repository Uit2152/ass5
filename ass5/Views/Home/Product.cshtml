@{
    ViewBag.Title = "Products";
    var dataFile = Server.MapPath("~/App_Data/Products.txt");
    string[] products = File.ReadAllLines(dataFile);


    Func<int> getNextProductId = () =>
    {
        if (products.Length > 0)
        {
            string lastLine = products[products.Length - 1];
            string[] lastLineParts = lastLine.Split('|');
            if (lastLineParts.Length > 0 && int.TryParse(lastLineParts[0], out int lastProductId))
            {
                return lastProductId + 1;
            }
        }
        return 1;
    };
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <style>
        .button {
            background-color: white;
            border: none;
        }

        img {
            float: left;
        }

        table {
            width: auto;
            border-collapse: collapse;
            margin-top: 20px;
        }

        table, th, td {
            border: 1px solid black;
        }

        th, td {
            padding: 10px;
            text-align: center;
        }

        .het-hang {
            color: red;
            font-weight: bold;
        }

        .con-hang {
            font-weight: bold;
        }

        .add-to-cart {
            text-align: center;
        }
    </style>
</head>
<body>
    <div>

        <h2 style="font-weight:bold;">Danh sách các sản phẩm</h2>
        <a href="@Url.Action("add", new { id = getNextProductId().ToString()  })">Add</a>

        <table>
            <thead>
                <tr>
                    <th>STT</th>
                    <th>Tên sản phẩm</th>
                    <th>Giá</th>
                    <th>Tình Trạng</th>
                    <th>Thao tác</th>

                </tr>
            </thead>
            <tbody>
                @foreach (string dataLine in products)
                {
                    string[] product = dataLine.Split('|');

                    //product[0]=STT; product[1]=Tên; product[2]=Giá; product[4]=Tình trạng ;product[3]=Thương hiệu; product[5]=miêu tả sản phẩm; product[6]=image-link ;
                    if (product.Length >= 7)
                    {
                        string imageUrl = product[6].Trim();

                        // Try parsing quantity and price
                        if (int.TryParse(product[4], out int quantity) && int.TryParse(product[2], out int price))
                        {
                            string statusClass = (quantity > 0) ? "con-hang" : "het-hang";
                            string price_str = string.Format("{0:0,0 VNĐ}", price);

                            <tr>
                                <!--Cột STT -->
                                <td style="text-align:justify;">@product[0]</td>
                                <!--Cột Tên sản phẩm -->
                                <td style="text-align:left;">
                                    <img src="@Url.Content("~/Content/" + imageUrl)" alt="Product Image" height=150 width=150 />
                                    <h5 style="color:orangered; font-weight:bold;">@product[1]</h5>
                                    <p>@product[5]</p>
                                </td>
                                <!--Cột Tên giá -->
                                <td>@price_str</td>
                                <!--Cột Tình trạng -->
                                <td class="tinh-trang">
                                    <span class="@statusClass">@((quantity > 0) ? "Còn hàng" : "Hết hàng")</span><br />
                                    <span>(@quantity)</span>
                                </td>

                                <!--lựa chọn  -->
                                <td>
                                    <a href="@Url.Action("Edit", new { id = product[0] })">Edit</a> |
                                    <a href="#" onclick="deleteProduct('@product[0]')">Delete</a>
                                </td>
                            </tr>
                        }
                        else
                        {
                            // Handle invalid quantity or price format
                            <tr>
                                <td colspan="6" style="background:yellow;">Invalid data format for product at position: @product[0]</td>
                            </tr>
                        }
                    }
                }
            </tbody>
        </table>
    </div>

    <script>
        
            function deleteProduct(productId) {
                if (confirm("Are you sure you want to delete this product?")) {
                    // Implement deletion logic
                    var updatedLines = lines.filter(line => line.startsWith(productId + "|") === false);
            SaveToFile(updatedLines);
            location.reload(); // Refresh the page
                }
            }
    </script>

</body>
</html>
